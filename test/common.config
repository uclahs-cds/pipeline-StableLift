// This file requires that params.liftover_direction and params.variant_caller be defined

params {
    output_dir = "/hot/project/method/AlgorithmEvaluation/BNCH-000142-GRCh37v38/test/output"

    // Parameterized values that tests can use
    test_base = "/hot/project/method/AlgorithmEvaluation/BNCH-000142-GRCh37v38/publish"

    test_chains = [
        GRCh37ToGRCh38: "${test_base}/resource/hg19ToHg38.over.chain",
        GRCh38ToGRCh37: "${test_base}/resource/hg38ToHg19.over.chain"
    ]

    model_37_38 = "${test_base}/model/GRCh37-to-GRCh38/RF-model_GRCh37-to-GRCh38"
    model_38_37 = "${test_base}/model/GRCh38-to-GRCh37/RF-model_GRCh38-to-GRCh37"

    test_models = [
        GRCh37ToGRCh38: [
            HaplotypeCaller: "${model_37_38}_gSNP_HaplotypeCaller.Rds",
            Muse2:           "${model_37_38}_sSNV_Muse2.Rds",
            Mutect2:         "${model_37_38}_sSNV_Mutect2.Rds",
            SomaticSniper:   "${model_37_38}_sSNV_SomaticSniper.Rds",
            Strelka2:        "${model_37_38}_sSNV_Strelka2.Rds",
            "Delly2-gSV":    "${model_37_38}_gSV_Delly2-gSV.Rds",
            "Delly2-sSV":    "${model_37_38}_sSV_Delly2-sSV.Rds"
        ],
        GRCh38ToGRCh37: [
            HaplotypeCaller: "${model_38_37}_gSNP_HaplotypeCaller.Rds",
            Muse2:           "${model_38_37}_sSNV_Muse2.Rds",
            Mutect2:         "${model_38_37}_sSNV_Mutect2.Rds",
            SomaticSniper:   "${model_38_37}_sSNV_SomaticSniper.Rds",
            Strelka2:        "${model_38_37}_sSNV_Strelka2.Rds",
            "Delly2-gSV":    "${model_38_37}_gSV_Delly2-gSV.Rds",
            "Delly2-sSV":    "${model_38_37}_sSV_Delly2-sSV.Rds"
        ]
    ]

    test_contigs = [
        GRCh37ToGRCh38: "${test_base}/resource/GRCh38_VCF-header-contigs.txt",
        GRCh38ToGRCh37: "${test_base}/resource/GRCh37_VCF-header-contigs.txt"
    ]

    test_repeat_bed = [
        GRCh37ToGRCh38: "${test_base}/resource/GRCh38_RepeatMasker-intervals.bed",
        GRCh38ToGRCh37: "${test_base}/resource/GRCh37_RepeatMasker-intervals.bed"
    ]

    // Concrete values for tests
    header_contigs = test_contigs[liftover_direction]
    gnomad_rds = "${test_base}/resource/gnomad.v4.0.sv.Rds"
    chain_file = test_chains[liftover_direction]
    repeat_bed = test_repeat_bed[liftover_direction]

    funcotator_data_source = "/hot/project/method/AlgorithmEvaluation/BNCH-000142-GRCh37v38/publish/resource/funcotator_dataSources.v1.7.20200521s_StableLift"

    rf_model = test_models[liftover_direction][variant_caller]

    save_intermediate_files = true
    ucla_cds = false

    fasta_ref_37 = "/hot/ref/reference/GRCh37-EBI-hs37d5/hs37d5.fa"
    fasta_ref_38 = "/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
}
